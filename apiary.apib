FORMAT: 1A
HOST: http://okidoctor.com/api/

# OKIDOC

Esta es  la documentación para el uso del API en OKIDOC, por los momentos 
limitado a llamados dentro del sistema, iniciados por el sistema o el usuario

# Estructura [/]

Las llamadas de datos se hacen a través del *apiController* para ser accesibles vía ULR (GET). 
Recibe los parámetros separados por "/". 

Puede aceptar hasta 6 parámetros


Esta es la estructura del URL:

api/appointments/parametro1/parametro2/parametro3/parametro4/parametro5/parametro6/
http://localhost/BS-OK/html/api/autocomplete/json/patient/?term=el

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.

## Group Endpoints

Resources related to questions in the API. 

## Question [/autocomplete/{print}/{object}/?term={term} ]

Autocomplete toma los siguientes parametros

+ print
+ object
+ term

+ Parameters
    + print: json, array (required, String) - Cómo será retornada la respuesta
    + object: all, practice, patient (required, String) - El objeto a ser buscado
    + term: (optional, String) - El String de búsqueda. Debe ir precedido por "?term="

### Ver Autocomplete [GET]

+ Response 200 (application/json)

        [{
            "label": "Nombre de Clínica",
            "id_value": "1",
            "type": "clinic_name"
        }, {
            "label": "Dirección de Clínica",
            "id_value": "2",
            "type": "clinic_address"
        }, {
            "label": "Nombre del Paciente",
            "id_value": "3",
            "type": "patient_name"
        }, {
            "label": "Nombre del Doctor",
            "id_value": "4",
            "type": "doctor_name"
        }]

## Choice [/questions/{question_id}/choices/{choice_id}]

+ Parameters
    + question_id: 1 (required, number) - ID of the Question in form of an integer
    + choice_id: 1 (required, number) - ID of the Choice in form of an integer

### Vote on a Choice [POST]

This action allows you to vote on a question's choice.

+ Response 201

    + Headers

            Location: /questions/1

## Questions Collection [/questions{?page}]

+ Parameters
    + page: 1 (optional, number) - The page of questions to return

### List All Questions [GET]

+ Response 200 (application/json)

    + Headers

            Link: </questions?page=2>; rel="next"

    + Body

            [
                {
                    "question": "Favourite programming language?",
                    "published_at": "2014-11-11T08:40:51.620Z",
                    "url": "/questions/1",
                    "choices": [
                        {
                            "choice": "Swift",
                            "url": "/questions/1/choices/1",
                            "votes": 2048
                        }, {
                            "choice": "Python",
                            "url": "/questions/1/choices/2",
                            "votes": 1024
                        }, {
                            "choice": "Objective-C",
                            "url": "/questions/1/choices/3",
                            "votes": 512
                        }, {
                            "choice": "Ruby",
                            "url": "/questions/1/choices/4",
                            "votes": 256
                        }
                    ]
                }
            ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ question (string) - The question
+ choices (array[string]) - A collection of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2014-11-11T08:40:51.620Z",
                "url": "/questions/2",
                "choices": [
                    {
                        "choice": "Swift",
                        "url": "/questions/2/choices/1",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "url": "/questions/2/choices/2",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "url": "/questions/2/choices/3",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "url": "/questions/2/choices/4",
                        "votes": 0
                    }
                ]
            }
